#!/usr/bin/env python3
import argparse
import json
import logging
import pprint
import os

LOGGER = logging.getLogger(__name__)
def main():
    logging.basicConfig(level=logging.DEBUG)
    files = os.listdir('rapidfab/i18n')
    languages = [f.partition('.')[0] for f in files if not f == 'index.js']
    parser = argparse.ArgumentParser(description=(
        "This program is used to take a JavaScript source file that is fairly JSON-like "
        "and get all of the strings from it that should be translated. This is useful for "
        "creating a file that can be sent to translators for cheap translation.\n\n"
        "For example: bin/extract-i18n en-US > en-US.txt"
    ))
    parser.add_argument('language', choices=languages, help='The language to extract phrases from')
    args = parser.parse_args()

    path = os.path.join('rapidfab', 'i18n', args.language + '.js')
    LOGGER.info("Working on %s", path)
    with open(path, 'r') as f:
        contents = f.read()

    assert contents.startswith('export default {'), 'sanity check'
    body = contents[len('export default '):]
    try:
        data = json.loads(body)
    except Exception as e:
        LOGGER.error("Failed to parse data: %s", e)
        return -1
    pprint.pprint(list(data.values()))

if __name__ == '__main__':
    main()
